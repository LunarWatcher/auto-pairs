Describe Whitespace-restricted completion
    Before each
        call autopairs#Variables#InitVariables()
        let g:AutoPairsCompleteOnlyOnSpace = 1
    End
    It should support the basic functionality
        new | only!
        " Control test for later
        call Expect("'Henlo (").ToMatch("'Henlo ('")

        call Expect("[").ToMatch("[]")
        call Expect("[[").ToMatch("[[]]")
        call Expect("[a\<left>[").ToMatch("[[a]")
        let b:AutoPairsCompleteOnlyOnSpace = 0
        call Expect("[a\<left>[").ToMatch("[[]a]")

    End
    It should support fully disabling the whitelist
        let g:AutoPairsAutoBuildSpaceWhitelist = 0
        new | only!

        call Expect("[").ToMatch("[]")
        call Expect("[[").ToMatch("[[]")

        call Expect("[ \<left>[").ToMatch("[[]  ]")
        call Expect("[b\<left>[").ToMatch("[[b]")
    End
    It should support a whitelist without auto-building one

        let g:AutoPairsAutoBuildSpaceWhitelist = 0
        let g:AutoPairsNextCharWhitelist = ['a', ']']
        new | only!
        call Expect("[").ToMatch("[]")
        call Expect("[[").ToMatch("[[]]")
        call Expect("[a\<left>[").ToMatch("[[]a]")
        call Expect("[b\<left>[").ToMatch("[[b]")
    End
    It should support adding to the whitelist when auto-building

        let g:AutoPairsNextCharWhitelist = ['a', ']']
        new | only!

        call Expect("[").ToMatch("[]")
        call Expect("[[").ToMatch("[[]]")

        call Expect("[a\<left>[").ToMatch("[[]a]")
        call Expect("[b\<left>[").ToMatch("[[b]")
    End
    It should support a flexible regex
        let g:AutoPairsSpaceCompletionRegex = '\w'
        new | only!
        call Expect("ab\<esc>0i(").ToMatch('(ab')
        call Expect("'Henlo (").ToMatch("'Henlo ()'")
        call Expect("여우\<esc>0i(").ToMatch('()여우')

        let b:AutoPairsSpaceCompletionRegex = '[abcdef]'
        call Expect("fox\<esc>0i(").ToMatch('(fox')
        call Expect("wolf\<esc>0i(").ToMatch('()wolf')
        call Expect("Fox\<esc>0i(").ToMatch('(Fox')
        call Expect("Wolf\<esc>0i(").ToMatch('()Wolf')

        let b:AutoPairsSpaceCompletionRegex = '[[:lower:][:upper:]0-9]'
        call Expect("fox\<esc>0i(").ToMatch('(fox')
        call Expect("wolf\<esc>0i(").ToMatch('(wolf')
        call Expect("æøå\<esc>0i(").ToMatch('(æøå')
        call Expect("Æøå\<esc>0i(").ToMatch('(Æøå')
        call Expect("여우\<esc>0i(").ToMatch('(여우')
    End
End
